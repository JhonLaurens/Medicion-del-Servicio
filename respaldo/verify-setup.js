#!/usr/bin/env node

console.log('üöÄ Iniciando verificaci√≥n de la aplicaci√≥n Coltefinanciera...\n');

const fs = require('fs');
const path = require('path');

// Verificar archivos principales
const requiredFiles = [
    'package.json',
    'index.html',
    'index.tsx',
    'App.tsx',
    'vite.config.ts',
    'public/datos.csv'
];

console.log('üìÅ Verificando archivos requeridos...');
requiredFiles.forEach(file => {
    if (fs.existsSync(file)) {
        console.log(`  ‚úÖ ${file}`);
    } else {
        console.log(`  ‚ùå ${file} - FALTANTE`);
    }
});

// Verificar node_modules
console.log('\nüì¶ Verificando dependencias...');
if (fs.existsSync('node_modules')) {
    console.log('  ‚úÖ node_modules existe');
    
    // Verificar dependencias cr√≠ticas
    const criticalDeps = [
        'react',
        'react-dom',
        'vite',
        '@vitejs/plugin-react',
        'recharts',
        'papaparse'
    ];
    
    criticalDeps.forEach(dep => {
        if (fs.existsSync(path.join('node_modules', dep))) {
            console.log(`  ‚úÖ ${dep}`);
        } else {
            console.log(`  ‚ùå ${dep} - FALTANTE`);
        }
    });
} else {
    console.log('  ‚ùå node_modules no existe - ejecutar npm install');
}

// Verificar TypeScript
console.log('\nüîß Verificando configuraci√≥n...');
try {
    const tsconfig = JSON.parse(fs.readFileSync('tsconfig.json', 'utf8'));
    console.log('  ‚úÖ tsconfig.json v√°lido');
} catch (error) {
    console.log('  ‚ùå tsconfig.json inv√°lido:', error.message);
}

// Verificar package.json
try {
    const pkg = JSON.parse(fs.readFileSync('package.json', 'utf8'));
    console.log('  ‚úÖ package.json v√°lido');
    
    if (pkg.scripts && pkg.scripts.dev) {
        console.log('  ‚úÖ Script "dev" encontrado:', pkg.scripts.dev);
    } else {
        console.log('  ‚ùå Script "dev" no encontrado');
    }
} catch (error) {
    console.log('  ‚ùå package.json inv√°lido:', error.message);
}

console.log('\nüìä Verificando datos...');
if (fs.existsSync('public/datos.csv')) {
    const csvSize = fs.statSync('public/datos.csv').size;
    console.log(`  ‚úÖ datos.csv existe (${(csvSize / 1024).toFixed(1)} KB)`);
} else {
    console.log('  ‚ùå datos.csv no encontrado');
}

console.log('\nüåê Para iniciar el servidor:');
console.log('  1. npm install (si es necesario)');
console.log('  2. npm run dev');
console.log('  3. Abrir http://localhost:5173 en el navegador');

console.log('\n‚úÖ Verificaci√≥n completada');
