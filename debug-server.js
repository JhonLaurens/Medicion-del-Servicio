const http = require('http');
const fs = require('fs');
const path = require('path');

console.log('üîç Verificando estado del servidor...');

// Verificar archivos cr√≠ticos
const criticalFiles = [
  'index.html',
  'package.json',
  'vite.config.ts',
  'src/main.tsx',
  'public/datos.csv'
];

console.log('\nüìÅ Verificando archivos cr√≠ticos:');
criticalFiles.forEach(file => {
  if (fs.existsSync(file)) {
    const stats = fs.statSync(file);
    console.log(`  ‚úÖ ${file} (${(stats.size / 1024).toFixed(1)} KB)`);
  } else {
    console.log(`  ‚ùå ${file} - NO ENCONTRADO`);
  }
});

// Verificar si el puerto 5173 est√° en uso
console.log('\nüåê Verificando servidor en puerto 5173...');

const options = {
  hostname: 'localhost',
  port: 5173,
  path: '/',
  method: 'GET',
  timeout: 5000
};

const req = http.request(options, (res) => {
  console.log(`‚úÖ Servidor respondiendo - Status: ${res.statusCode}`);
  
  let data = '';
  res.on('data', (chunk) => {
    data += chunk;
  });
  
  res.on('end', () => {
    if (data.includes('Analytics Platform')) {
      console.log('‚úÖ P√°gina principal cargada correctamente');
    } else if (data.includes('Error')) {
      console.log('‚ö†Ô∏è P√°gina cargada pero con errores');
    } else {
      console.log('‚ö†Ô∏è Respuesta inesperada del servidor');
    }
    
    // Verificar datos CSV
    console.log('\nüìä Verificando acceso a datos CSV...');
    const csvReq = http.request({
      ...options,
      path: '/datos.csv'
    }, (csvRes) => {
      console.log(`üìä CSV Status: ${csvRes.statusCode}`);
      if (csvRes.statusCode === 200) {
        console.log('‚úÖ Archivo CSV accesible');
      } else {
        console.log('‚ùå Archivo CSV no accesible');
      }
    });
    
    csvReq.on('error', (err) => {
      console.log('‚ùå Error accediendo al CSV:', err.message);
    });
    
    csvReq.end();
  });
});

req.on('error', (err) => {
  console.log('‚ùå Servidor no responde:', err.message);
  console.log('\nüí° Sugerencias:');
  console.log('   1. Ejecutar: npm run dev');
  console.log('   2. Verificar que el puerto 5173 est√© libre');
  console.log('   3. Revisar la configuraci√≥n de Vite');
});

req.on('timeout', () => {
  console.log('‚è∞ Timeout - El servidor no responde');
  req.destroy();
});

req.end();